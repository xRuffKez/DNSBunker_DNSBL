name: Domain SOA Checker

on:
  schedule:
    - cron: "0 2 * * *"   # Runs daily at 2 AM UTC
  workflow_dispatch:      # Allow manual trigger

jobs:
  check-domains:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install dnspython==2.6.1

      - name: Run domain check
        run: |
          python <<'EOF'
          import dns.resolver
          import dns.rcode
          from pathlib import Path

          # Configure resolvers (Cloudflare + Google)
          resolvers = []
          for ns in (["1.1.1.1"], ["8.8.8.8"]):
              r = dns.resolver.Resolver(configure=False)
              r.nameservers = ns
              resolvers.append(r)

          # Process all list files that start with digits (e.g. 01-mal, 02-phish, etc.)
          files = sorted([p for p in Path(".").iterdir() if p.is_file() and p.name[:2].isdigit()])

          for path in files:
              with path.open("r") as f:
                  domains = [line.strip() for line in f if line.strip()]

              valid_domains = set()
              for domain in domains:
                  ok = False
                  for r in resolvers:
                      try:
                          answer = r.resolve(domain, "SOA")
                          if answer.response.rcode() == dns.rcode.NOERROR:
                              ok = True
                              break
                      except dns.resolver.NXDOMAIN:
                          print(f"❌ NXDOMAIN: {domain}")
                      except dns.resolver.Timeout:
                          print(f"⚠️ Timeout: {domain}")
                      except dns.resolver.NoAnswer:
                          print(f"⚠️ NoAnswer: {domain}")
                      except Exception as e:
                          print(f"⚠️ Error {domain}: {e}")
                  if ok:
                      print(f"✅ Valid: {domain}")
                      valid_domains.add(domain)

              # Write back sorted valid domains
              with path.open("w") as f:
                  f.write("\n".join(sorted(valid_domains)) + "\n")
          EOF

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add .
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Auto-clean domain lists (SOA check, dedupe, sort)"
            git push
          fi
